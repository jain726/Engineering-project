function [initial_speed_matrix, final_speed_matrix] = M2_sub4_222_21_jain726(Test_data) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% ENGR 132 
% Program Description 
% Sub function to find the initial and final velocity from the velocity
% data using change in slope across multiple threshold values.
%
% Function Call
% [initial_speed_matrix, final_speed_matrix] = M2_sub4_222_21_jain726(Test_data)
%
% Input Arguments
% Test Data
%
% Output Arguments
% 1) Initial Velocity Matrix (rows: thresholds, columns: each data column)
% 2) Final Velocity Matrix (same as above)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% INITIALIZATION
data = readmatrix('Test_data');
[numRows, numCols] = size(data);

thresholds = 0:0.01:0.5;
numThresholds = length(thresholds);

initial_speed_matrix = zeros(numThresholds, numCols - 1);
final_speed_matrix = zeros(numThresholds, numCols - 1);

%% CALCULATIONS
for t = 1:numThresholds
    threshold = thresholds(t);
    
    for col = 2:numCols
        columnData = data(:, col);
        dV = diff(columnData);

        startIdx = find(dV > threshold, 1, 'first');

        if ~isempty(startIdx)
            Initial_speed = columnData(startIdx);
        else
            Initial_speed = NaN;
        end

        Final_speed = max(columnData);

        initial_speed_matrix(t, col - 1) = Initial_speed;
        final_speed_matrix(t, col - 1) = Final_speed;
    end
end

%% OUTPUT
disp('Initial Speeds for each threshold:');
disp(initial_speed_matrix);

disp('Final Speeds (should remain same across thresholds):');
disp(final_speed_matrix);

end
